1. Audio Quality & Volume Normalization
Streaming quality must be comparable to Spotify High.
Normalize volume on playback start so all songs have a consistent baseline loudness.
Device-side player manages final output adjustments.

2. Genres
Genres must be predefined and static (via SQL table genres or ENUM).
Clients can only select from this list.
songs.genre must be validated against genres.

3. Albums
Albums must be their own SQL table with APIs.
Endpoints
GET    /api/albums                     # List all albums
POST   /api/albums                     # Create a new album (admin only)
GET    /api/albums/{album_id}          # Get album details
PUT    /api/albums/{album_id}          # Update album (admin only)
DELETE /api/albums/{album_id}          # Delete album (admin only)
GET    /api/albums/{album_id}/songs    # Get songs belonging to an album

4. Song Filtering

Filter songs by:
Name → GET /api/songs?name=...
Genre → GET /api/songs?genre=...
Artist → GET /api/songs?artist=...

(New Endpoint Needed)
GET    /api/artists/{artist_id}/songs   # List all songs by a specific artist

5. Playlist Filtering
Filter user playlists by name:
GET /api/users/{user_id}/playlists?name=...

6. Latest Releases
Retrieve songs sorted by release date:
GET /api/songs?sort=release_date&order=desc

7. Song Naming Rules
Unique per artist:
An artist cannot publish two songs with the same title.
Allowed across artists:
Different artists can have songs with the same name.

8. Batch Uploads
Allow multiple songs to be uploaded in a single request.
Metadata must be sent for each song.
Suggested Endpoint
POST /api/songs
with array of paths of file on the device 

9. Random Discovery
Add support for random song discovery.
GET /api/songs?random=true&limit=10

10. Song Downloads
Allow clients to download one song at a time:
GET /api/songs/{song_id}/download

11. Playlist Visibility (Fix)
Default: is_public = false on playlist creation.
If is_public = true:
Anyone can view playlists & songs.
Only the owner can edit/delete.

12. Favorites Visibility (Fix)
Default: visible only to the owner.
If is_public = true:
Anyone can view favorites & their songs.
Only the owner can edit/delete.

13. Next Step
➡️ Review GitHub issues list and check which of these are already covered / partially done.